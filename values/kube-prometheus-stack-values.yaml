prometheus:
  prometheusSpec:
    ## If true, a nil or {} value for prometheus.prometheusSpec.serviceMonitorSelector will cause the
    ## prometheus resource to be created with selectors based on values in the helm deployment,
    ## which will also match the servicemonitors created
    ##
    serviceMonitorSelectorNilUsesHelmValues: false
    ## If true, a nil or {} value for prometheus.prometheusSpec.podMonitorSelector will cause the
    ## prometheus resource to be created with selectors based on values in the helm deployment,
    ## which will also match the podmonitors created
    ##
    podMonitorSelectorNilUsesHelmValues: false

grafana:
  enabled: true
  adminPassword: amirkato
  ingress:    
    enabled: true
    # annotations: 
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: "true"
    ingressClassName: nginx    
    hosts:
      - poster-downloader.ddns.net
    path: /grafana

    tls: 
      - hosts:
        - poster-downloader.ddns.net

  # # To make Grafana persistent (Using Statefulset)
  # #
  persistence:
    enabled: true
    type: pvc  
    accessModes:
      - ReadWriteOnce
    size: 5Gi  